import logging
import re
from telegram import Update
from telegram.ext import ContextTypes
from api.api_kinopoisk import search_film_name, search_film_rating, search_film_genres
from database.data_base import save_user_query


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    user_id = update.effective_user.id
    chat_id = update.effective_chat.id
    bot = context.bot

    logging.info(f'–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {text}')

    user_state = context.user_data.get('state')

    if text == 'üîç –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞/c–µ—Ä–∏–∞–ª–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é üé¨':
        context.user_data['state'] = 'awaiting_film_name'
        await update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞/—Å–µ—Ä–∏–∞–ª–∞:')
    elif text == 'üîç –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞/—Å–µ—Ä–∏–∞–ª–∞ –ø–æ —Ä–µ–π—Ç–∏–Ω–≥—É üåü':
        context.user_data['state'] = 'awaiting_film_rating'
        await update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ —Ä–µ–π—Ç–∏–Ω–≥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "–•.X-X.X". –ü—Ä–∏–º–µ—Ä: 7.2-8:')
    elif text == 'üîç –ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞/c–µ—Ä–∏–∞–ª–∞ –ø–æ –∂–∞–Ω—Ä—É üé≠':
        context.user_data['state'] = 'awaiting_film_genres'
        await update.message.reply_text('–í–≤–µ–¥–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π –∂–∞–Ω—Ä —Ñ–∏–ª—å–º–∞/—Å–µ—Ä–∏–∞–ª–∞:')

    # –†–∞–±–æ—Ç–∞ —Å —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
    elif user_state == 'awaiting_film_name':
        await search_film_name(text, user_id, chat_id, bot)
        save_user_query(user_id, text, 1)
        context.user_data['state'] = None  # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è

    elif user_state == 'awaiting_film_rating':
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞
        rating_pattern = r'^\d+(\.\d+)?-\d+(\.\d+)?$'

        try:
            if re.match(rating_pattern, text):
                # –†–∞–∑–¥–µ–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –Ω–∞ –¥–≤–∞ —á–∏—Å–ª–∞ (–º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥)
                min_rating, max_rating = map(float, text.split('-'))

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±–∞ –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ—Ç 0 –¥–æ 10
                if 0 <= min_rating <= 10 and 0 <= max_rating <= 10 and min_rating <= max_rating:
                    await search_film_rating(text, user_id, chat_id, bot)
                    save_user_query(user_id, text, 2)
                    context.user_data['state'] = None  # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è
                else:
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ —Ä–µ–π—Ç–∏–Ω–≥ –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –ø—Ä–µ–¥–µ–ª—ã
                    await update.message.reply_text(
                        '–†–µ–π—Ç–∏–Ω–≥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –æ—Ç 0 –¥–æ 10. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω.')
                    # –ù–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —á—Ç–æ–±—ã —Å–Ω–æ–≤–∞ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –≤–≤–æ–¥ —Ä–µ–π—Ç–∏–Ω–≥–∞
            else:
                # –ï—Å–ª–∏ —Ñ–æ—Ä–º–∞—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                await update.message.reply_text(
                    '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ä–µ–π—Ç–∏–Ω–≥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "X.X-X.X".')
                # –ù–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —á—Ç–æ–±—ã —Å–Ω–æ–≤–∞ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –≤–≤–æ–¥ —Ä–µ–π—Ç–∏–Ω–≥–∞
        except ValueError:
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ –≤ —á–∏—Å–ª–æ
            await update.message.reply_text('–û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω.')
            # –ù–µ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —á—Ç–æ–±—ã —Å–Ω–æ–≤–∞ –∑–∞–ø—Ä–æ—Å–∏—Ç—å –≤–≤–æ–¥ —Ä–µ–π—Ç–∏–Ω–≥–∞

    elif user_state == 'awaiting_film_genres':
        await search_film_genres(text, user_id, chat_id, bot)
        save_user_query(user_id, text, 3)
        context.user_data['state'] = None  # –°–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è

    else:
        logging.warning(f'–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {text}')
        await update.message.reply_text('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è.')


